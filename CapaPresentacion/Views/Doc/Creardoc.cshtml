@model CapaEntidades.documento

@{
    ViewBag.Title = "Creardoc";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form action="" class="form-register">
        <section class="form-register">

            <h4>Crear documento</h4>
            <hr />
            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.iddoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.iddoc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.iddoc, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <div class="f">
                @Html.Label("Tipo de documento", htmlAttributes: new { @class = "label" })
                <div class="">
                    @Html.EditorFor(model => model.tipodoc, new { htmlAttributes = new { @class = "controls" } })
                    @Html.ValidationMessageFor(model => model.tipodoc, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="">
                @Html.Label("Cedula empleado", htmlAttributes: new { @class = "label" })
                <div class="">
                    @Html.DropDownListFor(model => model.cedulaempleado, ViewData["lista2"] as IEnumerable<SelectListItem>, "Sin seleccionar", new { @class = "controls" })
                    @Html.ValidationMessageFor(model => model.cedulaempleado, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="">
                @Html.Label("Departamento de origen", htmlAttributes: new { @class = "label" })
                <div class="">
                    @Html.DropDownListFor(model => model.departamentoorigen, ViewData["lista"] as IEnumerable<SelectListItem>, "Sin seleccionar", new { @class = "controls" })
                    @Html.ValidationMessageFor(model => model.departamentoorigen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="">
                @Html.Label("Departamento destino", htmlAttributes: new { @class = "label" })
                <div class="">
                    @Html.DropDownListFor(model => model.departamentodestino, ViewData["lista"] as IEnumerable<SelectListItem>, "Sin seleccionar", new { @class = "controls" })
                    @Html.ValidationMessageFor(model => model.departamentodestino, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="">
                <div class="">
                    <input type="submit" value="Create" class="botons" />
                </div>
            </div>
            <div>
                @Html.ActionLink("Volver", "menu", "Usuario")
            </div>

        </section>
        </form>

            }

            
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")

            }
