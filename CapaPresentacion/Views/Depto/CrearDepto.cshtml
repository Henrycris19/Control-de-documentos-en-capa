@model CapaEntidades.departamentos

@{
    ViewBag.Title = "CrearDepto";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <form action="" class="form-register">
        <section class="form-register">
            <h4>Crear departamentos</h4>
            <hr />
            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.iddepto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.iddepto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.iddepto, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            <div class="">
                @Html.Label("Nombre", htmlAttributes: new { @class = "label" })
                <div class="">
                    @Html.EditorFor(model => model.nombredepto, new { htmlAttributes = new { @class = "controls" } })
                    @Html.ValidationMessageFor(model => model.nombredepto, "", new { @class = "text-danger" })
                </div>
            </div>


            <input type="submit" value="Create" class="botons" onclick="aceptar()" />
            <div>
                @Html.ActionLink("Volver", "menu", "Usuario")
            </div>

        </section>
    </form>
}


<script>
    function aceptar() {
        alert("Departamento creado.");
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
